# <type>[optional scope]: <description>
#
# [optional body]
#
# [optional footer(s)]

# --- COMMIT END ---
# Type can be:
#    feat     (new feature)
#    fix      (bug fix)
#    docs     (changes to documentation)
#    style    (formatting, missing semi colons, etc; no code change)
#    refactor (refactoring production code)
#    test     (adding tests, refactoring test; no production code change)
#    chore    (updating build tasks, package manager configs, etc; no production code change)
#    perf     (performance improvements)
#    ci       (changes to CI configuration files)
#    build    (changes to build system)
#    revert   (reverting a previous commit)
#
# Scope is optional and can be:
#    cli, generator, templates, module, utils, tests, docs, ci, build
#
# Description:
#    - use imperative, present tense: "change" not "changed" nor "changes"
#    - don't capitalize first letter
#    - no dot (.) at the end
#
# Body:
#    - use imperative, present tense: "change" not "changed" nor "changes"
#    - include motivation for the change and contrast with previous behavior
#
# Footer:
#    - reference issues and pull requests liberally
#    - use "Closes #123" or "Fixes #123" for closing issues
#    - use "BREAKING CHANGE:" for breaking changes
#
# Examples:
#    feat(cli): add --dry-run flag for preview mode
#    fix(templates): correct import path in command template
#    docs: update README with new examples
#    feat(generator)!: change output directory structure
#
#    BREAKING CHANGE: The CLI now uses a different directory structure.
